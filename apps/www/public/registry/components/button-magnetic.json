{
  "name": "button-magnetic",
  "type": "ui:components",
  "externalDependencies": [
    "motion/react"
  ],
  "internalDependencies": [],
  "files": [
    {
      "name": "button-magnetic.tsx",
      "content": "\"use client\"; // @NOTE: Add in case you are using Next.js\n\nimport { useRef, useState } from \"react\";\n\nimport { motion } from \"motion/react\";\n\nimport { cn } from '<%= it.aliases.utils %>/cn';\n\nexport function ButtonMagneticExample() {\n  return <ButtonMagnetic>Move Me</ButtonMagnetic>;\n}\n\ntype ButtonMagneticProps = React.ComponentProps<\"button\">;\n\nfunction ButtonMagnetic({ className, children }: ButtonMagneticProps) {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const ref = useRef<any>(null);\n\n  function handleMouseMove(e: React.MouseEvent) {\n    const { clientX, clientY } = e;\n    const { height, width, left, top } = ref.current.getBoundingClientRect();\n\n    const middleX = clientX - (left + width / 2);\n    const middleY = clientY - (top + height / 2);\n\n    setPosition({ x: middleX, y: middleY });\n  }\n\n  function handleMouseLeave() {\n    setPosition({ x: 0, y: 0 });\n  }\n\n  const { x, y } = position;\n\n  return (\n    <motion.button\n      ref={ref}\n      className={cn(\n        \"relative rounded-xl bg-black px-4 py-2 text-sm font-medium text-white dark:bg-white dark:text-black\",\n        className,\n      )}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      animate={{ x, y }}\n      transition={{\n        type: \"spring\",\n        damping: 15,\n        stiffness: 150,\n        mass: 0.1,\n      }}\n    >\n      {children}\n    </motion.button>\n  );\n}\n"
    }
  ]
}