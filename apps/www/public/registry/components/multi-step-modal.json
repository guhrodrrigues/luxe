{
  "name": "multi-step-modal",
  "externalDependencies": [
    "@radix-ui/react-dialog",
    "react-use-measure"
  ],
  "internalDependencies": [],
  "file": {
    "name": "multi-step-modal.tsx",
    "content": "'use client' // @NOTE: Add in case you are using Next.js\r\n\r\nimport { useState } from 'react'\r\n\r\nimport * as RadixDialog from '@radix-ui/react-dialog'\r\nimport {\r\n  AnimatePresence,\r\n  motion,\r\n  type Variants,\r\n  MotionConfig,\r\n} from 'motion/react'\r\n\r\nimport useMeasure from 'react-use-measure'\r\n\r\nimport { cn } from '<%= it.aliases.utils %>/cn'\r\n\r\nexport const MultiStepModal = RadixDialog.Root\r\nexport const MultiStepModalTrigger = RadixDialog.Trigger\r\nexport const MultiStepModalClose = RadixDialog.Close\r\n\r\ntype MultiStepModalSteps = {\r\n  title: string\r\n  description: string\r\n}\r\n\r\ntype MultiStepModalContentProps = React.CustomComponentPropsWithRef<\r\n  typeof RadixDialog.Content\r\n> & {\r\n  steps: MultiStepModalSteps[]\r\n}\r\n\r\nexport function MultiStepModalContent({\r\n  steps,\r\n  ...props\r\n}: MultiStepModalContentProps) {\r\n  const TOTAL_STEPS = steps.length\r\n  const MIN_STEP = 0\r\n\r\n  const [activeContentIndex, setActiveContentIndex] = useState(MIN_STEP)\r\n  const [direction, setDirection] = useState<number>(1)\r\n\r\n  const [ref, { height: heightContent }] = useMeasure()\r\n\r\n  const { title, description } = steps[activeContentIndex]\r\n\r\n  function handleControlsNavigation(control: 'previous' | 'next') {\r\n    const newDirection = control === 'next' ? 1 : -1\r\n    setDirection(newDirection)\r\n\r\n    setActiveContentIndex(prev => {\r\n      const nextIndex = prev + newDirection\r\n      return Math.min(TOTAL_STEPS - 1, Math.max(MIN_STEP, nextIndex))\r\n    })\r\n  }\r\n\r\n  const slideMotionVariants: Variants = {\r\n    initial: (dir: number) => {\r\n      return {\r\n        x: `${110 * dir}%`,\r\n        opacity: 0,\r\n\t\t\t\theight: heightContent > 0 ? heightContent : \"auto\",\r\n      }\r\n    },\r\n    active: {\r\n      x: '0%',\r\n      opacity: 1,\r\n\t\t\theight: heightContent > 0 ? heightContent : \"auto\",\r\n    },\r\n    exit: (dir: number) => {\r\n      return {\r\n        x: `${-110 * dir}%`,\r\n        opacity: 0,\r\n      }\r\n    },\r\n  }\r\n\r\n  return (\r\n    <MotionConfig transition={{ type: 'spring', duration: 0.6, bounce: 0 }}>\r\n      <RadixDialog.Portal>\r\n        <RadixDialog.Overlay\r\n          className={cn(\r\n            'fixed inset-0 z-[999] bg-black/80 ease-out',\r\n            'motion-safe:data-[state=open]:fade-in motion-safe:data-[state=open]:animate-in',\r\n            'motion-safe:data-[state=closed]:fade-out motion-safe:data-[state=closed]:animate-out',\r\n          )}\r\n        />\r\n        <RadixDialog.Content\r\n          {...props}\r\n          className={cn(\r\n            'max-w-96 overflow-hidden rounded-xl border border-border bg-main focus:outline-none',\r\n            '-translate-x-1/2 fixed top-1/3 left-1/2 z-[1001] motion-safe:ease-out',\r\n            'motion-safe:data-[state=open]:fade-in motion-safe:data-[state=open]:animate-in',\r\n            'motion-safe:data-[state=closed]:fade-out motion-safe:data-[state=closed]:animate-out',\r\n          )}\r\n        >\r\n\t\t\t\t\t<div className='px-4 pt-4 pb-3'>\r\n\t\t\t\t\t\t<AnimatePresence initial={false} mode=\"popLayout\" custom={direction}>\r\n\t\t\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\t\t\tkey={activeContentIndex}\r\n\t\t\t\t\t\t\t\tvariants={slideMotionVariants}\r\n\t\t\t\t\t\t\t\tinitial=\"initial\"\r\n\t\t\t\t\t\t\t\tanimate=\"active\"\r\n\t\t\t\t\t\t\t\texit=\"exit\"\r\n\t\t\t\t\t\t\t\tcustom={direction}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div ref={ref} className='flex flex-col gap-2'>\r\n\t\t\t\t\t\t\t\t\t<RadixDialog.Title className='font-medium text-base text-primary-foreground'>\r\n\t\t\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t\t\t</RadixDialog.Title>\r\n\t\t\t\t\t\t\t\t\t<RadixDialog.Description className='font-normal text-primary-muted text-sm/5.5'>\r\n\t\t\t\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t\t\t\t</RadixDialog.Description>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</motion.div>\r\n\t\t\t\t\t\t</AnimatePresence>\r\n\t\t\t\t\t</div>\r\n          <footer\r\n            className={cn(\r\n              'mt-2 flex items-center justify-between border-border border-t px-4 py-2',\r\n              'bg-main-muted *:rounded-full *:border *:border-border *:bg-main-secondary *:text-primary',\r\n              '*:h-8 *:w-24 *:px-3 *:font-medium *:text-[13px]/5.5',\r\n              '*:disabled:cursor-not-allowed *:disabled:opacity-50',\r\n            )}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleControlsNavigation('previous')}\r\n              disabled={activeContentIndex === MIN_STEP}\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleControlsNavigation('next')}\r\n              disabled={activeContentIndex === TOTAL_STEPS - 1}\r\n            >\r\n              Continue\r\n            </button>\r\n          </footer>\r\n        </RadixDialog.Content>\r\n      </RadixDialog.Portal>\r\n    </MotionConfig>\r\n  )\r\n}\r\n"
  }
}