{
  "name": "dropdown-menu",
  "type": "ui:components",
  "externalDependencies": [
    "motion/react"
  ],
  "internalDependencies": [],
  "files": [
    {
      "name": "dropdown-menu.tsx",
      "content": "\"use client\"; // @NOTE: Add in case you are using Next.js\n\nimport { useState, useEffect } from \"react\";\n\nimport { useAnimate, stagger, motion } from \"motion/react\";\n\nimport {\n  LayoutGridIcon,\n  TrashIcon,\n  Building2,\n  UserCircleIcon,\n  SettingsIcon,\n  ChevronRightIcon,\n  BellIcon,\n} from \"lucide-react\";\n\nimport { cn } from '<%= it.aliases.utils %>/cn';\n\nfunction useMenuAnimation(isOpen: boolean) {\n  const [scope, animate] = useAnimate();\n\n  const staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\n  useEffect(() => {\n    animate(\"#menu-icon\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 12px)\"\n          : \"inset(10% 50% 90% 50% round 12px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      },\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      },\n    );\n  }, [isOpen, animate, staggerMenuItems]);\n\n  return scope;\n}\n\ntype DropdownMenuProps = React.ComponentProps<\"nav\">;\n\nexport function DropdownMenu({ className, ...props }: DropdownMenuProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  const items = [\n    { icon: <UserCircleIcon size={16} />, name: \"Profile\" },\n    { icon: <LayoutGridIcon size={16} />, name: \"Your applications\" },\n    { icon: <Building2 size={16} />, name: \"Teams\" },\n    { icon: <BellIcon size={16} />, name: \"Notifications\" },\n    {\n      icon: <TrashIcon size={16} />,\n      name: \"Remove account\",\n      customStyle:\n        \"!text-red-500 duration-150 hover:!bg-red-600/10 focus-visible:text-red-500 focus-visible:!bg-red-500/10 focus-visible:!border-red-500/10\",\n    },\n  ];\n\n  return (\n    <nav\n      className={cn(\"mx-auto w-full max-w-[200px] space-y-2\", className)}\n      ref={scope}\n      {...props}\n    >\n      <motion.button\n        whileTap={{ scale: 0.97 }}\n        className={cn(\n          \"flex w-full max-w-[300px] items-center justify-between rounded-xl border border-neutral-200 bg-neutral-50 px-3.5 py-2.5\",\n          \"focus-visible:border-neutral-300 focus-visible:outline-none dark:border-neutral-800 dark:bg-neutral-900 dark:focus-visible:border-neutral-700\",\n        )}\n        onClick={() => setIsOpen((prevState) => !prevState)}\n      >\n        <span className=\"text-sm font-medium text-neutral-500 dark:text-neutral-300\">\n          Settings\n        </span>\n        <div style={{ transformOrigin: \"50% 55%\" }}>\n          <SettingsIcon size={15} className=\"text-neutral-400\" id=\"menu-icon\" />\n        </div>\n      </motion.button>\n      <ul\n        className={cn(\n          // @NOTE: Add absolute position to the floating dropdown menu\n          \"relative z-[1] mx-auto flex w-full max-w-[200px] flex-col gap-1.5 rounded-xl border border-neutral-200 bg-neutral-50 px-1.5 py-2.5 dark:border-neutral-800 dark:bg-neutral-900\",\n          isOpen ? \"pointer-events-auto\" : \"pointer-events-none\",\n        )}\n        style={{ clipPath: \"inset(10% 50% 90% 50% round 12px)\" }}\n      >\n        {items.map(({ icon, name, customStyle }, index) => (\n          <li key={index}>\n            <button\n              className={cn(\n                \"group flex w-full items-center gap-2 rounded-lg border border-transparent py-1 text-neutral-500 transition-colors\",\n                \"hover:text-neutral-600 focus-visible:border-neutral-200 focus-visible:text-neutral-600 focus-visible:outline-none\",\n                \"dark:text-neutral-400 dark:hover:text-neutral-300 dark:focus-visible:border-neutral-800 dark:focus-visible:text-neutral-300\",\n                \"select-none px-1.5 hover:bg-neutral-200/40 focus-visible:bg-neutral-200/40 dark:hover:bg-neutral-800/60 dark:focus-visible:bg-neutral-800/60\",\n                customStyle,\n              )}\n            >\n              {icon}\n              <span className=\"flex items-center gap-1 text-sm font-medium\">\n                {name}\n                <ChevronRightIcon\n                  size={12}\n                  className=\"-translate-x-1 scale-0 opacity-0 transition-all group-hover:translate-x-0 group-hover:scale-100 group-hover:opacity-100\"\n                />\n              </span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n"
    }
  ]
}