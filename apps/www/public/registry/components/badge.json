{
  "name": "badge",
  "externalDependencies": [
    "@radix-ui/react-slot"
  ],
  "internalDependencies": [],
  "file": {
    "name": "badge.tsx",
    "content": "'use client' // @NOTE: Add in case you are using Next.js\r\n\r\nimport { motion } from 'motion/react'\r\nimport * as Slot from '@radix-ui/react-slot'\r\n\r\nimport { cn } from '<%= it.aliases.utils %>/cn'\r\n\r\ntype Variant = {\r\n  variant: string\r\n  component: React.FC<React.ComponentProps<'div'>>\r\n}\r\n\r\nconst variants = [\r\n  {\r\n    variant: 'default',\r\n    component: ({ className, ...props }) => (\r\n      <div\r\n        {...props}\r\n        className={cn(\r\n          'relative overflow-hidden rounded-xl border border-transparent bg-neutral-900 px-3 py-1 text-neutral-200 shadow-inner transition-all duration-200',\r\n          'shadow-main-foreground/70 hover:bg-main-invert/90 dark:shadow-main-foreground/80 dark:hover:bg-main-foreground/56',\r\n          className,\r\n        )}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    variant: 'outline',\r\n    component: ({ className, ...props }) => (\r\n      <div\r\n        {...props}\r\n        className={cn(\r\n          'relative overflow-hidden rounded-full border border-border bg-main-background px-3 py-1 transition-all duration-200',\r\n          'text-primary-foreground hover:bg-main-foreground/50',\r\n\t\t\t\t\tclassName\r\n        )}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    variant: 'success',\r\n    component: ({ className, ...props }) => (\r\n      <div\r\n        {...props}\r\n        className={cn(\r\n          'rounded-full bg-gradient-to-t from-green-700 to-green-600 px-3 py-1 text-white',\r\n          className,\r\n        )}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    variant: 'destructive',\r\n    component: ({ className, ...props }) => (\r\n      <div\r\n        {...props}\r\n        className={cn(\r\n          'rounded-full bg-gradient-to-t from-red-600 to-red-500 px-3 py-1 text-white',\r\n          className,\r\n        )}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    variant: 'shine',\r\n    component: ({ className, ...props }) => (\r\n      <div\r\n        {...props}\r\n        className={cn(\r\n          'animate-shine items-center justify-center rounded-full border border-border bg-[length:400%_100%]',\r\n          'px-3 py-1 text-primary-invert/90 transition-colors dark:text-primary-muted',\r\n\t\t\t\t\t\"bg-[linear-gradient(110deg,#000000,45%,#303030,55%,#000000)]\",\r\n          'dark:bg-[linear-gradient(110deg,#000103,45%,#303030,55%,#000103)]',\r\n          className,\r\n        )}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    variant: 'animated-border',\r\n    component: ({ children, className, ...props }) => (\r\n      <div\r\n        {...props}\r\n        className={cn(\r\n          'relative rounded-full border border-primary/10 bg-main-background px-3 py-1 duration-200 hover:bg-main-foreground/40',\r\n          className,\r\n        )}\r\n      >\r\n        <div\r\n          className={cn(\r\n            '-inset-px pointer-events-none absolute rounded-[inherit] border border-transparent [mask-clip:padding-box,border-box]',\r\n            '[mask-composite:intersect] [mask-image:linear-gradient(transparent,transparent),linear-gradient(#000,#000)]',\r\n          )}\r\n        >\r\n          <motion.div\r\n            className={cn(\r\n              'absolute aspect-square bg-gradient-to-r from-transparent via-neutral-300 to-neutral-400',\r\n              'dark:from-transparent dark:via-neutral-600 dark:to-neutral-400',\r\n            )}\r\n            animate={{\r\n              offsetDistance: ['0%', '100%'],\r\n            }}\r\n            style={{\r\n              width: 20,\r\n              offsetPath: `rect(0 auto auto 0 round ${20}px)`,\r\n            }}\r\n            transition={{\r\n              repeat: Number.POSITIVE_INFINITY,\r\n              duration: 5,\r\n              ease: 'linear',\r\n            }}\r\n          />\r\n        </div>\r\n        <span className=\"relative z-10 text-primary-muted\">\r\n          {children}\r\n        </span>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    variant: 'rotate-border',\r\n    component: ({ children, className, ...props }) => (\r\n      <div\r\n        {...props}\r\n        className=\"relative inline-flex overflow-hidden rounded-full p-px\"\r\n      >\r\n        <span\r\n          className={cn(\r\n            'absolute inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#4e4e4e_0%,#d4d4d4_50%,#414141_100%)]',\r\n            'dark:bg-[conic-gradient(from_90deg_at_50%_50%,#c2c2c2_0%,#505050_50%,#bebebe_100%)]',\r\n          )}\r\n        />\r\n        <span\r\n          className={cn(\r\n            'inline-flex size-full items-center justify-center rounded-full bg-main-background px-3 py-1 text-primary-foreground backdrop-blur-3xl',\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </span>\r\n      </div>\r\n    ),\r\n  },\r\n] as const satisfies readonly Variant[]\r\n\r\nexport type BadgeProps = {\r\n  variant?: (typeof variants)[number]['variant']\r\n} & React.ComponentProps<'div'>\r\n\r\nexport function Badge({\r\n  variant = 'default',\r\n  className,\r\n  ...props\r\n}: BadgeProps) {\r\n  const FALLBACK_INDEX = 0\r\n\r\n  const variantComponent = variants.find(v => v.variant === variant)?.component\r\n\r\n  const Component = variantComponent || variants[FALLBACK_INDEX].component\r\n\r\n  return (\r\n    <Slot.Root className={cn('font-medium text-xs')}>\r\n      <Component {...props} className={className} />\r\n    </Slot.Root>\r\n  )\r\n}\r\n"
  }
}