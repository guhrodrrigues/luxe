{
  "name": "tooltip",
  "type": "ui:components",
  "externalDependencies": [
    "motion/react"
  ],
  "internalDependencies": [],
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\n\nimport { motion } from \"motion/react\";\n\nimport { cn } from '<%= it.aliases.utils %>/cn';\n\nexport function TooltipExample() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <button className=\"rounded-xl border border-neutral-300 bg-neutral-100 px-4 py-2 text-sm font-medium text-neutral-500 dark:border-neutral-900 dark:bg-neutral-950 dark:text-neutral-400\">\n        Hover Me\n      </button>\n    </Tooltip>\n  );\n}\n\ntype TooltipProps = {\n  text: string;\n} & React.ComponentProps<\"div\">;\n\nfunction Tooltip({ text, children, className }: TooltipProps) {\n  const [isToastVisible, setIsToastVisible] = useState(false);\n\n  return (\n    <div\n      onMouseEnter={() => setIsToastVisible(true)}\n      onMouseLeave={() => setIsToastVisible(false)}\n      className=\"relative inline-block\"\n    >\n      <motion.div\n        className={cn(\n          \"absolute -top-4 left-1/2 whitespace-nowrap rounded-md border border-neutral-300 bg-neutral-100 [translate:-50%_-50%]\",\n          \"px-2 py-1 text-xs text-black dark:border-[#262626] dark:bg-neutral-900 dark:text-white\",\n          className,\n        )}\n        initial={{ opacity: 0, y: 5, filter: \"blur(4px)\", scale: 0.9 }}\n        animate={{\n          opacity: isToastVisible ? 1 : 0,\n          y: isToastVisible ? 0 : 5,\n          filter: isToastVisible ? \"blur(0px)\" : \"blur(4px)\",\n          scale: isToastVisible ? 1 : 0.9,\n        }}\n        transition={{ ease: \"easeInOut\", duration: 0.15 }}\n      >\n        <span>{text}</span>\n      </motion.div>\n\n      {children}\n    </div>\n  );\n}\n"
    }
  ]
}