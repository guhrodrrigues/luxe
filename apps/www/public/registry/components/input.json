{
  "name": "input",
  "externalDependencies": [],
  "internalDependencies": [],
  "file": {
    "name": "input.tsx",
    "content": "'use client' // @NOTE: Add in case you are using Next.js\n\nimport { useState } from 'react'\n\nimport { AnimatePresence, motion, type Variants } from 'motion/react'\n\nimport { cn } from '<%= it.aliases.utils %>/cn'\n\nexport type InputProps = React.ComponentPropsWithRef<'input'>\ntype FieldState = 'idle' | 'filled'\n\nexport function Input({\n  placeholder,\n  onChange,\n  className,\n  ...props\n}: InputProps) {\n  const [fieldState, setFieldState] = useState<FieldState>('idle')\n\n  const animatedPlaceholderVariants: Variants = {\n    show: {\n      x: 0,\n      opacity: 1,\n      filter: 'blur(var(--blur-none))',\n    },\n    hidden: {\n      x: 28,\n      opacity: 0,\n      filter: 'blur(var(--blur-xs))',\n    },\n  }\n\n  return (\n    <div\n      className={cn(\n        'relative inline-flex h-11 w-64 items-center overflow-hidden rounded-xl border border-border bg-main-secondary shadow-xs transition-colors ease-out focus-within:border-primary data-[filled=true]:border-border',\n        'has-disabled:opacity-80 has-disabled:*:cursor-not-allowed',\n        className,\n      )}\n      data-filled={fieldState === 'filled'}\n    >\n      <input\n        {...props}\n        className={cn(\n          'peer h-full flex-1 bg-transparent px-3 py-2 caret-primary outline-none placeholder:sr-only',\n          'font-normal font-sans text-primary-foreground text-sm/5.5 ',\n        )}\n        placeholder={placeholder}\n        onChange={event => {\n          setFieldState(event.target.value.length > 0 ? 'filled' : 'idle')\n          onChange?.(event)\n        }}\n      />\n\n      <AnimatePresence mode=\"popLayout\" initial={false}>\n        {fieldState !== 'filled' && (\n          <motion.span\n            className={cn(\n              'pointer-events-none absolute left-3',\n              'font-normal font-sans text-primary-muted/70 text-sm/5.5',\n            )}\n            variants={animatedPlaceholderVariants}\n            initial=\"hidden\"\n            animate=\"show\"\n            exit=\"hidden\"\n            transition={{\n              type: 'spring',\n              duration: 0.6,\n              bounce: 0,\n            }}\n          >\n            {placeholder}\n          </motion.span>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n"
  }
}