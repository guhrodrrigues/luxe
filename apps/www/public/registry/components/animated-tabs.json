{
  "name": "animated-tabs",
  "type": "ui:components",
  "externalDependencies": [],
  "internalDependencies": [],
  "files": [
    {
      "name": "animated-tabs.tsx",
      "content": "'use client' // @NOTE: Add in case you are using Next.js\n\nimport { useEffect, useRef, useState } from 'react'\n\nimport { cn } from '@/utils/cn'\n\ntype AnimatedTabsProps = {\n  tabs: Array<string>\n}\n\nexport function AnimatedTabs({ tabs }: AnimatedTabsProps) {\n  const [activeTab, setActiveTab] = useState(tabs[0])\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const activeTabRef = useRef<HTMLButtonElement>(null)\n\n  useEffect(() => {\n    const container = containerRef.current\n\n    if (container && activeTab) {\n      const activeTabElement = activeTabRef.current\n\n      if (activeTabElement) {\n        const { offsetLeft, offsetWidth } = activeTabElement\n\n        const clipLeft = offsetLeft\n        const clipRight = offsetLeft + offsetWidth\n\n        container.style.clipPath = `inset(0 ${Number(100 - (clipRight / container.offsetWidth) * 100).toFixed()}% 0 ${Number((clipLeft / container.offsetWidth) * 100).toFixed()}% round 17px)`\n      }\n    }\n  }, [activeTab])\n\n  return (\n    <div className='relative mx-auto flex w-fit flex-col items-center rounded-full'>\n      <div\n        ref={containerRef}\n        className='absolute z-10 w-full overflow-hidden [clip-path:inset(0px_75%_0px_0%_round_17px)] [transition:clip-path_0.25s_ease]'\n      >\n        <div className='relative flex w-full justify-center bg-primary'\n        >\n          {tabs.map((tab, index) => (\n            <button\n              key={index.toString()}\n              type=\"button\"\n              onClick={() => setActiveTab(tab)}\n              className={cn(\n                'flex h-8 items-center rounded-full p-3 font-medium text-primary-invert text-sm/5.5',\n              )}\n              tabIndex={-1}\n            >\n              {tab}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"relative flex w-full justify-center\">\n        {tabs.map((tab, index) => {\n          const isActive = activeTab === tab\n\n          return (\n            <button\n              key={index.toString()}\n              type=\"button\"\n              ref={isActive ? activeTabRef : null}\n              onClick={() => setActiveTab(tab)}\n              className='flex h-8 items-center rounded-full p-3 font-medium text-primary-muted text-sm/5.5'\n            >\n              {tab}\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}"
    }
  ]
}