{
  "name": "animated-tabs",
  "externalDependencies": [],
  "internalDependencies": [],
  "file": {
    "name": "animated-tabs.tsx",
    "content": "'use client' // @NOTE: Add in case you are using Next.js\r\n\r\nimport { useEffect, useRef, useState } from 'react'\r\n\r\nimport { cn } from '<%= it.aliases.utils %>/cn'\r\n\r\ntype AnimatedTabsProps = {\r\n  tabs: Array<string>\r\n}\r\n\r\nexport function AnimatedTabs({ tabs }: AnimatedTabsProps) {\r\n  const [activeTab, setActiveTab] = useState(tabs[0])\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const activeTabRef = useRef<HTMLButtonElement>(null)\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current\r\n\r\n    if (container && activeTab) {\r\n      const activeTabElement = activeTabRef.current\r\n\r\n      if (activeTabElement) {\r\n        const { offsetLeft, offsetWidth } = activeTabElement\r\n\r\n        const clipLeft = offsetLeft\r\n        const clipRight = offsetLeft + offsetWidth\r\n\r\n        container.style.clipPath = `inset(0 ${Number(100 - (clipRight / container.offsetWidth) * 100).toFixed()}% 0 ${Number((clipLeft / container.offsetWidth) * 100).toFixed()}% round 17px)`\r\n      }\r\n    }\r\n  }, [activeTab])\r\n\r\n  return (\r\n    <div className='relative mx-auto flex w-fit flex-col items-center rounded-full'>\r\n      <div\r\n        ref={containerRef}\r\n        className='absolute z-10 w-full overflow-hidden [clip-path:inset(0px_75%_0px_0%_round_17px)] [transition:clip-path_0.25s_ease]'\r\n      >\r\n        <div className='relative flex w-full justify-center bg-primary'\r\n        >\r\n          {tabs.map((tab, index) => (\r\n            <button\r\n              key={index.toString()}\r\n              type=\"button\"\r\n              onClick={() => setActiveTab(tab)}\r\n              className={cn(\r\n                'flex h-8 items-center rounded-full p-3 font-medium text-primary-invert text-sm/5.5',\r\n              )}\r\n              tabIndex={-1}\r\n            >\r\n              {tab}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"relative flex w-full justify-center\">\r\n        {tabs.map((tab, index) => {\r\n          const isActive = activeTab === tab\r\n\r\n          return (\r\n            <button\r\n              key={index.toString()}\r\n              type=\"button\"\r\n              ref={isActive ? activeTabRef : null}\r\n              onClick={() => setActiveTab(tab)}\r\n              className='flex h-8 items-center rounded-full p-3 font-medium text-primary-muted text-sm/5.5'\r\n            >\r\n              {tab}\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"
  }
}