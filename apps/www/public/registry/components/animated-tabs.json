{
  "name": "animated-tabs",
  "type": "ui:components",
  "externalDependencies": [],
  "internalDependencies": [],
  "files": [
    {
      "name": "animated-tabs.tsx",
      "content": "\"use client\"; // @NOTE: Add in case you are using Next.js\n\nimport { useEffect, useRef, useState } from \"react\";\n\nconst TABS = [\n  { label: \"All Posts\" },\n  { label: \"Interactions\" },\n  { label: \"Resources\" },\n  { label: \"Docs\" },\n];\n\nexport function AnimatedTabs() {\n  const [activeTab, setActiveTab] = useState(TABS[0].label);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const activeTabRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n\n    if (container && activeTab) {\n      const activeTabElement = activeTabRef.current;\n\n      if (activeTabElement) {\n        const { offsetLeft, offsetWidth } = activeTabElement;\n\n        const clipLeft = offsetLeft;\n        const clipRight = offsetLeft + offsetWidth;\n\n        container.style.clipPath = `inset(0 ${Number(100 - (clipRight / container.offsetWidth) * 100).toFixed()}% 0 ${Number((clipLeft / container.offsetWidth) * 100).toFixed()}% round 17px)`;\n      }\n    }\n  }, [activeTab, activeTabRef, containerRef]);\n\n  return (\n    <div className=\"relative mx-auto flex w-fit flex-col items-center rounded-full\">\n      <div\n        ref={containerRef}\n        className=\"absolute z-10 w-full overflow-hidden [clip-path:inset(0px_75%_0px_0%_round_17px)] [transition:clip-path_0.25s_ease]\"\n      >\n        <div className=\"relative flex w-full justify-center bg-black dark:bg-white\">\n          {TABS.map((tab, index) => (\n            <button\n              key={index}\n              onClick={() => setActiveTab(tab.label)}\n              className=\"flex h-8 items-center rounded-full p-3 text-sm font-medium text-white dark:text-black\"\n              tabIndex={-1}\n            >\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"relative flex w-full justify-center\">\n        {TABS.map(({ label }, index) => {\n          const isActive = activeTab === label;\n\n          return (\n            <button\n              key={index}\n              ref={isActive ? activeTabRef : null}\n              onClick={() => setActiveTab(label)}\n              className=\"flex h-8 items-center rounded-full p-3 text-sm font-medium text-neutral-500 dark:text-neutral-300\"\n            >\n              {label}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"
    }
  ]
}