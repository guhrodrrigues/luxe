{
  "name": "checkbox",
  "type": "ui:components",
  "externalDependencies": [
    "@radix-ui/react-checkbox"
  ],
  "internalDependencies": [],
  "files": [
    {
      "name": "checkbox.tsx",
      "content": "\"use client\"; // @NOTE: Add in case you are using Next.js\n\nimport * as RadixCheckbox from \"@radix-ui/react-checkbox\";\n\nimport { AnimatePresence, motion } from \"motion/react\";\n\nimport { cn } from '<%= it.aliases.utils %>/cn';\n\ntype CheckboxProps = React.CustomComponentPropsWithRef<\n  typeof RadixCheckbox.Root\n>;\n\nexport function Checkbox(props: CheckboxProps) {\n  const { checked } = props;\n\n  return (\n    <RadixCheckbox.Root\n      {...props}\n      className={cn(\n        \"relative inset-ring-1 inset-ring-border inline-block size-5 appearance-none rounded bg-neutral-100 dark:bg-neutral-900\",\n      )}\n    >\n      <AnimatePresence mode=\"popLayout\">\n        <RadixCheckbox.Indicator\n          className={cn(\n            \"absolute inset-0 flex items-center justify-center rounded-[inherit] bg-primary\",\n          )}\n          asChild\n        >\n          <motion.div\n            initial={{\n              opacity: 0,\n              scale: 0.5,\n            }}\n            animate={{\n              opacity: 1,\n              scale: 1,\n            }}\n            transition={{\n              duration: 0.3,\n              ease: [0.175, 0.885, 0.32, 1.1],\n            }}\n          >\n            <CheckIcon checkedState={checked} />\n          </motion.div>\n        </RadixCheckbox.Indicator>\n      </AnimatePresence>\n    </RadixCheckbox.Root>\n  );\n}\n\ntype CheckIconProps = {\n  checkedState: CheckboxProps[\"checked\"];\n};\n\nfunction CheckIcon({ checkedState }: CheckIconProps) {\n  const CHECK_PATH = \"M5 13 L10 18 L20 6\";\n  const INDETERMINATE_PATH = \"M6 12 H18\";\n\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn(\n        \"shrink-0 scale-65 stroke-4 stroke-white dark:stroke-black\",\n      )}\n    >\n      <title>Check</title>\n\n      <motion.path\n        d={checkedState === \"indeterminate\" ? INDETERMINATE_PATH : CHECK_PATH}\n        initial={{\n          pathLength: 0,\n        }}\n        animate={{\n          pathLength: 1,\n        }}\n        transition={{\n          duration: 0.3,\n          ease: [0.645, 0.045, 0.355, 1],\n        }}\n      />\n    </svg>\n  );\n}\n"
    }
  ]
}