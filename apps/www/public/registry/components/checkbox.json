{
  "name": "checkbox",
  "externalDependencies": [
    "@radix-ui/react-checkbox"
  ],
  "internalDependencies": [],
  "file": {
    "name": "checkbox.tsx",
    "content": "'use client' // @NOTE: Add in case you are using Next.js\r\n\r\nimport * as RadixCheckbox from '@radix-ui/react-checkbox'\r\n\r\nimport { AnimatePresence, motion, useReducedMotion } from 'motion/react'\r\n\r\nimport { cn } from '<%= it.aliases.utils %>/cn'\r\n\r\nconst showAnimationProps = {\r\n  initial: { opacity: 0, scale: 0.5 },\r\n  animate: { opacity: 1, scale: 1 },\r\n  transition: { duration: 0.3, ease: [0.175, 0.885, 0.32, 1.1] },\r\n}\r\n\r\nconst checkIconAnimationProps = {\r\n  initial: { pathLength: 0 },\r\n  animate: { pathLength: 1 },\r\n  transition: { duration: 0.3, ease: [0.645, 0.045, 0.355, 1] },\r\n}\r\n\r\ntype CheckboxProps = React.ComponentProps<typeof RadixCheckbox.Root>\r\n\r\nexport function Checkbox({ checked, className, ...props }: CheckboxProps) {\r\n  const isReducedMotion = useReducedMotion()\r\n\r\n  return (\r\n    <RadixCheckbox.Root\r\n      {...props}\r\n      className={cn(\r\n        'relative inset-ring-1 inset-ring-border inline-block size-5 appearance-none rounded bg-main-muted',\r\n        className,\r\n      )}\r\n    >\r\n      <AnimatePresence mode=\"popLayout\">\r\n        <RadixCheckbox.Indicator\r\n          className=\"absolute inset-0 flex items-center justify-center rounded-[inherit] bg-primary\"\r\n          asChild\r\n        >\r\n          <motion.div {...(!isReducedMotion && showAnimationProps)}>\r\n            <CheckIcon\r\n              checkedState={checked}\r\n              isReducedMotion={isReducedMotion}\r\n            />\r\n          </motion.div>\r\n        </RadixCheckbox.Indicator>\r\n      </AnimatePresence>\r\n    </RadixCheckbox.Root>\r\n  )\r\n}\r\n\r\ntype CheckIconProps = {\r\n  checkedState: CheckboxProps['checked']\r\n  isReducedMotion: boolean | null\r\n}\r\n\r\nfunction CheckIcon({ checkedState, isReducedMotion }: CheckIconProps) {\r\n  const CHECK_PATH = 'M5 13 L10 18 L20 6'\r\n  const INDETERMINATE_PATH = 'M6 12 H18'\r\n\r\n  const path =\r\n    checkedState === 'indeterminate' ? INDETERMINATE_PATH : CHECK_PATH\r\n\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"shrink-0 scale-65 stroke-4 stroke-primary-invert\"\r\n    >\r\n      <motion.path\r\n        d={path}\r\n        {...(!isReducedMotion && checkIconAnimationProps)}\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n"
  }
}